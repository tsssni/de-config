(defvar eww "eww -c ~/.config/eww/dashboard")
(defvar year "2002")
(defvar month "08")
(defvar day "08")
(defvar art-url "")
(defvar prev-icon "󰒮")
(defvar next-icon "󰒭")
(defvar power-reveal "false")
(defvar poweroff-icon "")
(defvar reboot-icon "")
(defvar suspend-icon "󰤄")
(defvar logout-icon "󰍃")
(defvar network-reveal "false")
(defvar network-icon "󰖩")
(defvar bluetooth-reveal "false")
(defvar bluetooth-icon "󰂯")
(defvar volume-reveal "false")
(defvar volume-icon "󰕾")
(defvar brightness-reveal "false")
(defvar brightness-icon "󰃟")
(defvar battery-reveal "false")
(defvar battery-icon "󰂄")

(defvar bar-class "bar")
(defvar calendar-class "calendar")
(defvar calendar-content-class "calendar-content")
(defvar music-class "music")
(defvar cover-class "cover")
(defvar prev-button-class "button")
(defvar prev-label-class "prev-label")
(defvar play-button-class "button")
(defvar play-label-class "play-label")
(defvar next-button-class "button")
(defvar next-label-class "next-label")
(defvar music-scale-class "music-scale")
(defvar date-button-class "button")
(defvar date-label-class "date-label")
(defvar title-class "title")
(defvar title-label-class "title-label")
(defvar artist-class "artist")
(defvar artist-label-class "artist-label")
(defvar volume-button-class "button")
(defvar volume-label-class "volume-label")
(defvar volume-scale-class "scale")
(defvar brightness-button-class "button")
(defvar brightness-label-class "brightness-label")
(defvar brightness-scale-class "scale")
(defvar battery-button-class "button")
(defvar battery-label-class "battery-label")
(defvar battery-scale-class "scale")
(defvar network-button-class "button")
(defvar network-label-class "network-label")
(defvar network-info-class "network-info")
(defvar bluetooth-button-class "button")
(defvar bluetooth-label-class "bluetooth-label")
(defvar bluetooth-info-class "bluetooth-info")
(defvar poweroff-button-class "button")
(defvar poweroff-label-class "poweroff-label")
(defvar reboot-button-class "button")
(defvar reboot-label-class "reboot-label")
(defvar suspend-button-class "button")
(defvar suspend-label-class "suspend-label")
(defvar exit-button-class "button")
(defvar exit-label-class "exit-label")

(defpoll weekday :interval "0.1s" "scripts/date.sh -a")
(defpoll hour :interval "0.1s" "scripts/date.sh -H")
(defpoll minute :interval "0.1s" "scripts/date.sh -M")
(defpoll second :interval "0.1s" "scripts/date.sh -S")
(defpoll play-icon :interval "0.1s" "scripts/media.sh --icon")
(defpoll title :interval "0.1s" "scripts/media.sh --title")
(defpoll artist :interval "0.1s" "scripts/media.sh --artist")
(defpoll position :interval "0.1s" "scripts/media.sh --get-position")
(defpoll length :interval "0.1s" "scripts/media.sh --length")
(defpoll volume :interval "0.1s" "scripts/volume.sh --get")
(defpoll brightness :interval "0.1s" "scripts/brightness.sh --get")
(defpoll battery :interval "0.1s" "scripts/battery.sh --get")
(defpoll losize-cover :interval "0.1s" "scripts/media.sh --cover --losize")
(defpoll hisize-cover :interval "0.1s" "scripts/media.sh --cover --hisize")
(defpoll network :interval "0.1s" "scripts/network.sh")
(defpoll bluetooth-device :interval "0.1s" "scripts/bluetooth.sh")


(defwindow dashboard
  :monitor 0
  :geometry 
    (geometry 
      :x "10px"
      :y "10px"
      :width "98%"
      :height "50px"
      :anchor "top center")
  :stacking "fg"
  :exclusive true
  (bar))

(defwindow music
  :monitor 0
  :geometry
    (geometry
      :x "45%"
      :y "10px"
      :width "10%"
      :height "10%")
    (box
      :class music-class
      :orientation "v"
      :space-evenly "false"
      (box
        :class cover-class
        :halign "fill"
        :valign "fill"
        (image
          :width "100px"
          :height "100px"
          :path hisize-cover))
      (box
        :orientation "h"
        :halign "center"
        :valign "center"
        :space-evenly "false"
        :spacing "10"
        (eventbox
          :cursor "pointer"
          :onhover "${eww} update prev-button-class=\"light-button\""
          :onhoverlost "${eww} update prev-button-class=\"button\""
          (box
            :class prev-button-class
            :width 50
            :height 50
            (button
              :onclick "scripts/media.sh --prev"
              (box
                :class prev-label-class
                (label
                  :text prev-icon)))))
        (eventbox
          :cursor "pointer"
          :onhover "${eww} update play-button-class=\"light-button\""
          :onhoverlost "${eww} update play-button-class=\"button\""
          (box
            :class play-button-class
            :width 50
            :height 50
            (button
              :onclick "scripts/media.sh --toggle"
              (box
                :class play-label-class
                (label
                  :text play-icon)))))
        (eventbox
          :cursor "pointer"
          :onhover "${eww} update next-button-class=\"light-button\""
          :onhoverlost "${eww} update next-button-class=\"button\""
          (box
            :class next-button-class
            :width 50
            :height 50
          (button
            :onclick "scripts/media.sh --next"
            (box
              :class next-label-class
              (label
                :text next-icon))))))
        (box
          :class music-scale-class
          (eventbox
            :cursor "pointer"
            (scale
              :active "true"
              :min "0"
              :max length
              :value position
              :orientation "h"
              :onchange "scripts/media.sh --set-position {}")))))

(defwidget bar []
  (box
    :class bar-class
    :orientation "h"
    :space-evenly "true"
    :halign "fill"
    :valign "fill"
    (info)
    (music)
    (quick-operation)))

(defwidget info []
  (box
    :orientation "h"
    :space-evenly "false"
    :valign "fill"
    (date)))

(defwidget date []
  (box
    :class date-button-class
    :orientation "v"
    :valign "fill"
    :halign "fill"
    (label
      :class date-label-class
      :halign "center"
      :text "${weekday}/${hour}:${minute}:${second}")))

(defwidget music []
  (box
    :orientation "h"
    :space-evenly "false"
    :spacing "5"
    :halign "center"
    (box
      :halign "fill"
      :valign "fill"
      (eventbox
        :cursor "pointer"
        (button
          :onclick "./scripts/music.sh"
          (image
            :path losize-cover))))
    (box
      :orientation "v"
      :halign "fill"
      :valign "fill"
      (box
        :class title-class
        (label
          :class title-label-class
          :halign "center"
          :text title
          :limit-width "30"))
      (box
        :class artist-class
        (label
          :class artist-label-class
          :halign "center"
          :text artist
          :limit-width "15")))))

(defwidget quick-operation []
  (box
    :orientation "h"
    :space-evenly "false"
    :halign "end"
    :valign "fill"
    (volume)
    (brightness)
    (battery)
    (network)
    (bluetooth)
    (power)))

(defwidget volume []
  (eventbox
    :onhover "${eww} update volume-reveal=true;
              ${eww} update volume-button-class=\"light-button\""
    :onhoverlost "${eww} update volume-reveal=false;
                  ${eww} update volume-button-class=\"button\""
    (box
      :class volume-button-class
      :orientation "h"
      :space-evenly "false"
      (box
        :width 20
        (button
          (label
            :class volume-label-class
            :text volume-icon)))
      (revealer
        :reveal volume-reveal
        :transition "slideright"
        :duration "350ms"
        (box
          :class volume-scale-class
          :orientation "h"
          :space-evenly "false"
          :halign "center"
          :valign "center"
          (eventbox
              :cursor "pointer"
            (scale
              :width "100"
              :min "0"
              :max "100"
              :value volume
              :orientation "h"
              :onchange "scripts/volume.sh --set {}")))))))

(defwidget brightness []
  (eventbox
    :onhover "${eww} update brightness-reveal=true;
              ${eww} update brightness-button-class=\"light-button\""
    :onhoverlost "${eww} update brightness-reveal=false;
                  ${eww} update brightness-button-class=\"button\""
    (box
      :class brightness-button-class
      :orientation "h"
      :space-evenly "false"
      (box
        :width 20
        (button
          (label
            :class brightness-label-class
            :text brightness-icon)))
      (revealer
        :reveal brightness-reveal
        :transition "slideright"
        :duration "350ms"
        (box
          :class brightness-scale-class
          :orientation "h"
          :space-evenly "false"
          :halign "center"
          :valign "center"
          (eventbox
            :cursor "pointer"
            (scale
              :width "100"
              :min "0"
              :max "100"
              :value brightness
              :orientation "h"
              :onchange "scripts/brightness.sh --set {}")))))))

(defwidget battery []
  (eventbox
    :onhover "${eww} update battery-reveal=true;
              ${eww} update battery-button-class=\"light-button\""
    :onhoverlost "${eww} update battery-reveal=false;
                  ${eww} update battery-button-class=\"button\""
    (box
      :class battery-button-class
      :orientation "h"
      :space-evenly "false"
      (box
        :width 20
        (button
          (label
            :class battery-label-class
            :text battery-icon)))
      (revealer
        :reveal battery-reveal
        :transition "slideright"
        :duration "350ms"
        (box
          :class battery-scale-class
          :orientation "h"
          :space-evenly "false"
          (scale
            :width "100"
            :min "0"
            :max "100"
            :value battery
            :orientation "h"))))))

(defwidget network []
  (eventbox
    :cursor "pointer"
    :onclick "hyprctl dispatch exec nm-connection-editor"
    :onhover "${eww} update network-reveal=true;
              ${eww} update network-button-class=\"light-button\""
    :onhoverlost "${eww} update network-reveal=false;
                  ${eww} update network-button-class=\"button\""
    (box
      :class network-button-class
      :orientation "h"
      :space-evenly "false"
      (box
        :width 20
        (label
          :class network-label-class
          :text network-icon))
      (revealer
        :reveal network-reveal
        :transition "slideright"
        :duration "350ms"
        (box
          :class network-info-class
          :orientation "h"
          :space-evenly "false"
          :halign "fill"
          :valign "fill"
          (label
            :halign "center"
            :valign "center"
            :text network))))))

(defwidget bluetooth []
  (eventbox
    :cursor "pointer"
    :onclick "hyprctl dispatch exec blueman-manager"
    :onhover "${eww} update bluetooth-reveal=true;
              ${eww} update bluetooth-button-class=\"light-button\""
    :onhoverlost "${eww} update bluetooth-reveal=false;
                  ${eww} update bluetooth-button-class=\"button\""
    (box
      :class bluetooth-button-class
      :orientation "h"
      :space-evenly "false"
      (box
        :width 20
        (label
          :class bluetooth-label-class
          :text bluetooth-icon))
      (revealer
        :reveal bluetooth-reveal
        :transition "slideright"
        :duration "350ms"
        (box
          :class bluetooth-info-class
          :orientation "h"
          :space-evenly "false"
          :halign "fill"
          :valign "fill"
          (label
            :halign "center"
            :valign "center"
            :markup "${bluetooth-device}"))))))

(defwidget power []
  (eventbox
    :onhover "${eww} update power-reveal=true"
    :onhoverlost "${eww} update power-reveal=false"
    (box
      :orientation "h"
      :space-evenly "false"
      (revealer
        :reveal power-reveal
        :transition "slideright"
        :duration "350ms"
        (box
          :orientation "h"
          :space-evenly "false"
          :halign "fill"
          :valign "fill"
          (eventbox
            :cursor "pointer"
            :onhover "${eww} update exit-button-class=\"light-button\""
            :onhoverlost "${eww} update exit-button-class=\"button\""
            (box
              :class exit-button-class
              :width 20
              (button
                :onclick "hyprctl dispatch exit"
                (label
                  :class exit-label-class
                  :text logout-icon))))
          (eventbox
            :cursor "pointer"
            :onhover "${eww} update suspend-button-class=\"light-button\""
            :onhoverlost "${eww} update suspend-button-class=\"button\""
            (box
              :class suspend-button-class
              :width 20
              (button
                :onclick "systemctl suspend"
                (label
                  :class suspend-label-class
                  :text suspend-icon))))
          (eventbox
            :cursor "pointer"
            :onhover "${eww} update reboot-button-class=\"light-button\""
            :onhoverlost "${eww} update reboot-button-class=\"button\""
            (box
              :class reboot-button-class
              :width 20
              (button
                :onclick "systemctl reboot"
                (label
                  :class reboot-label-class
                  :text reboot-icon))))))
      (eventbox
        :cursor "pointer"
        :onhover "${eww} update poweroff-button-class=\"light-button\""
        :onhoverlost "${eww} update poweroff-button-class=\"button\""
        (box
          :class poweroff-button-class
          :width 20
          (button
            :onclick "systemctl poweroff"
            (label
              :class poweroff-label-class
              :text poweroff-icon)))))))
